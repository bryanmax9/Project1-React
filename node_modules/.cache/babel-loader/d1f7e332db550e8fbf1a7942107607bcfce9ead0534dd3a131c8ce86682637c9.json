{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brill\\\\OneDrive\\\\Escritorio\\\\Coding Related\\\\Project1-React\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\n// We are storing all the data as a list of objects that will store all the necessary data\n// Here we are Moking an API that is giving as class objects with data that then will be used in the fonrt-end\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dummy_Expenses = [{\n  id: \"e1\",\n  title: \"Toilet Paper\",\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: \"e2\",\n  title: \"New TV\",\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: \"e3\",\n  title: \"Car Insurance\",\n  amount: 294.67,\n  date: new Date(2021, 2, 28)\n}, {\n  id: \"e4\",\n  title: \"New Desk (Wooden)\",\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\nconst App = () => {\n  _s();\n  const [expenses, setExpenses] = useState(Dummy_Expenses);\n  const addExpenseHandler = expense => {\n    console.log(\"We are in App.js\");\n    // Everytime an expense is added, it will print in the console\n    console.log(expense);\n\n    // we add the expense as an item to the array.\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // We are giving the array of objects to the Expenses.js in order to create the ExpenseItems\n  // This is JXS\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n\n  // Alternative making it using the import 'react'. However, this is conversome and unreadable\n  //  DECLARATIVE JavaScript Code\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n};\n_s(App, \"gcstchiZK1IcIjkzYsdKsRjIzDo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NewExpense","Expenses","jsxDEV","_jsxDEV","Dummy_Expenses","id","title","amount","date","Date","App","_s","expenses","setExpenses","addExpenseHandler","expense","console","log","prevExpenses","children","onAddExpense","fileName","_jsxFileName","lineNumber","columnNumber","items","_c","$RefreshReg$"],"sources":["C:/Users/brill/OneDrive/Escritorio/Coding Related/Project1-React/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\n// We are storing all the data as a list of objects that will store all the necessary data\n// Here we are Moking an API that is giving as class objects with data that then will be used in the fonrt-end\nconst Dummy_Expenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(Dummy_Expenses);\n\n  const addExpenseHandler = (expense) => {\n    console.log(\"We are in App.js\");\n    // Everytime an expense is added, it will print in the console\n    console.log(expense);\n\n    // we add the expense as an item to the array.\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // We are giving the array of objects to the Expenses.js in order to create the ExpenseItems\n  // This is JXS\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n\n  // Alternative making it using the import 'react'. However, this is conversome and unreadable\n  //  DECLARATIVE JavaScript Code\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,QAAQ,MAAM,gCAAgC;;AAErD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG,CACrB;EACEC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,cAAc;EACrBC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,CAAC,EACD;EAAEJ,EAAE,EAAE,IAAI;EAAEC,KAAK,EAAE,QAAQ;EAAEC,MAAM,EAAE,MAAM;EAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAAE,CAAC,EAC1E;EACEJ,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,CAAC,EACD;EACEJ,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,mBAAmB;EAC1BC,MAAM,EAAE,GAAG;EACXC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,CAAC,CACF;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACK,cAAc,CAAC;EAExD,MAAMU,iBAAiB,GAAIC,OAAO,IAAK;IACrCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B;IACAD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;;IAEpB;IACAF,WAAW,CAAEK,YAAY,IAAK;MAC5B,OAAO,CAACH,OAAO,EAAE,GAAGG,YAAY,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACA,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACH,UAAU;MAACoB,YAAY,EAAEN;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC1DrB,OAAA,CAACF,QAAQ;MAACwB,KAAK,EAAEb;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;;EAGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACb,EAAA,CA/BID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}