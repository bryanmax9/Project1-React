{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brill\\\\OneDrive\\\\Escritorio\\\\Coding Related\\\\Project1-React\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\";\nimport React, { useState } from \"react\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseItem = props => {\n  // So, we are getting the title that is stored in the props\n  // Therefore, on click, we will eventually change the title from the variable\n  let title = props.title;\n\n  // Defining a function that will execute when the button for title change is clicked:\n  const clickHandler = () => {\n    title = \"Updated!\";\n    console.log(\"Clicked!!!!!!!!\");\n  };\n\n  // Adding Javascript code before returning the html\n  //Mocking Fetching data\n\n  // We are giving the date data to the component \"ExpenseDate\"\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.date.toISOString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["React","useState","Card","ExpenseDate","jsxDEV","_jsxDEV","ExpenseItem","props","title","clickHandler","console","log","className","children","date","fileName","_jsxFileName","lineNumber","columnNumber","toISOString","amount","onClick","_c","$RefreshReg$"],"sources":["C:/Users/brill/OneDrive/Escritorio/Coding Related/Project1-React/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  // So, we are getting the title that is stored in the props\r\n  // Therefore, on click, we will eventually change the title from the variable\r\n  let title = props.title;\r\n\r\n  // Defining a function that will execute when the button for title change is clicked:\r\n  const clickHandler = () => {\r\n    title = \"Updated!\";\r\n    console.log(\"Clicked!!!!!!!!\");\r\n  };\r\n\r\n  // Adding Javascript code before returning the html\r\n  //Mocking Fetching data\r\n\r\n  // We are giving the date data to the component \"ExpenseDate\"\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}></ExpenseDate>\r\n      <div>{props.date.toISOString()}</div>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n      <button onClick={clickHandler}>Change Title</button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,mBAAmB;AAC1B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B;EACA;EACA,IAAIC,KAAK,GAAGD,KAAK,CAACC,KAAK;;EAEvB;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBD,KAAK,GAAG,UAAU;IAClBE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC;;EAED;EACA;;EAEA;;EAEA,oBACEN,OAAA,CAACH,IAAI;IAACU,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC5BR,OAAA,CAACF,WAAW;MAACW,IAAI,EAAEP,KAAK,CAACO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC7Cb,OAAA;MAAAQ,QAAA,EAAMN,KAAK,CAACO,IAAI,CAACK,WAAW,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrCb,OAAA;MAAKO,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCR,OAAA;QAAAQ,QAAA,EAAKL;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBb,OAAA;QAAKO,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAC,GAAC,EAACN,KAAK,CAACa,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACNb,OAAA;MAAQgB,OAAO,EAAEZ,YAAa;MAAAI,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEX,CAAC;AAACI,EAAA,GA3BIhB,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}